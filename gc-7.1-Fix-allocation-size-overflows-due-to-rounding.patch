From ec9d99cb54c27df4acfcd498e22f4f8a2e5a8738 Mon Sep 17 00:00:00 2001
From: Xi Wang <xi.wang@gmail.com>
Date: Thu, 15 Mar 2012 04:55:08 +0800
Subject: [PATCH 4/4] Fix allocation size overflows due to rounding.

* malloc.c (GC_generic_malloc): Check if the allocation size is
rounded to a smaller value.
* mallocx.c (GC_generic_malloc_ignore_off_page): Likewise.

Conflicts:
	malloc.c
	mallocx.c
---
 malloc.c  |    2 ++
 mallocx.c |    2 ++
 2 files changed, 4 insertions(+)

diff --git a/malloc.c b/malloc.c
index a2aa41e..1643372 100644
--- a/malloc.c
+++ b/malloc.c
@@ -165,6 +165,8 @@ void * GC_generic_malloc(size_t lb, int k)
 	GC_bool init;
 	lw = ROUNDED_UP_WORDS(lb);
 	lb_rounded = WORDS_TO_BYTES(lw);
+        if (lb_rounded < lb)
+            return((*GC_oom_fn)(lb));
 	n_blocks = OBJ_SZ_TO_BLOCKS(lb_rounded);
 	init = GC_obj_kinds[k].ok_init;
 	LOCK();
diff --git a/mallocx.c b/mallocx.c
index 8a397cf..87b5b4e 100644
--- a/mallocx.c
+++ b/mallocx.c
@@ -179,6 +179,8 @@ void * GC_generic_malloc_ignore_off_page(size_t lb, int k)
         return(GC_generic_malloc((word)lb, k));
     lw = ROUNDED_UP_WORDS(lb);
     lb_rounded = WORDS_TO_BYTES(lw);
+    if (lb_rounded < lb)
+        return((*GC_oom_fn)(lb));
     n_blocks = OBJ_SZ_TO_BLOCKS(lb_rounded);
     init = GC_obj_kinds[k].ok_init;
     if (GC_have_errors) GC_print_all_errors();
-- 
1.7.10.2

